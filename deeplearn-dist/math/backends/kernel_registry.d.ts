import { Rank } from '../types';
import { MathBackend } from './backend';
import { ArgMaxNode, ArgMinNode } from './types/argminmax';
import { BatchNorm2DNode, BatchNorm3DNode, BatchNorm4DNode } from './types/batchnorm';
import { BinaryNode } from './types/binary';
import { CastNode } from './types/cast';
import { ConcatNode } from './types/concat';
import { Conv2DDerBiasNode, Conv2DDerFilterNode, Conv2DDerInputNode, Conv2DNode } from './types/conv';
import { GatherNode } from './types/gather';
import { EqualNode, LogicalNode, WhereNode } from './types/logical';
import { LRN4DNode } from './types/lrn';
import { MatMulNode } from './types/matmul';
import { MaximumNode, MaxNode, MinimumNode, MinNode } from './types/minmax';
import { MultinomialNode } from './types/multinomial';
import { OneHotNode } from './types/onehot';
import { Pad1DNode, Pad2DNode } from './types/pad';
import { PoolBackpropNode, PoolNode } from './types/pool';
import { PowNode } from './types/pow';
import { PReLUNode } from './types/prelu';
import { ReshapeNode } from './types/reshape';
import { ResizeBilinearNode } from './types/resize_bilinear';
import { Reverse4DNode } from './types/reverse';
import { Slice1DNode, Slice2DNode, Slice3DNode, Slice4DNode } from './types/slice';
import { SumNode } from './types/sum';
import { TopKIndicesNode, TopKValuesNode } from './types/topk';
import { ClipNode, LeakyReluNode, StepNode, TileNode, TransposeNode, UnaryNode } from './types/unary';
export declare function executeKernel<R extends Rank, K extends keyof KernelConfigRegistry<R>, O extends KernelConfigRegistry<R>[K]['output']>(backend: MathBackend, kernelName: K, inputAndArgs: KernelConfigRegistry<R>[K]['inputAndArgs']): O;
export interface KernelConfigRegistry<R extends Rank> {
    MatMul: MatMulNode;
    Clone: UnaryNode<R>;
    Slice1D: Slice1DNode;
    Slice2D: Slice2DNode;
    Slice3D: Slice3DNode;
    Slice4D: Slice4DNode;
    Reverse4D: Reverse4DNode;
    Concat: ConcatNode;
    Neg: UnaryNode<R>;
    Add: BinaryNode;
    Sub: BinaryNode;
    Mul: BinaryNode;
    Div: BinaryNode;
    Sum: SumNode;
    ArgMax: ArgMaxNode;
    ArgMin: ArgMinNode;
    Equal: EqualNode;
    NotEqual: EqualNode;
    Less: EqualNode;
    LessEqual: EqualNode;
    Greater: EqualNode;
    GreaterEqual: EqualNode;
    LogicalAnd: LogicalNode;
    LogicalOr: LogicalNode;
    Where: WhereNode;
    TopKValues: TopKValuesNode<R>;
    TopKIndices: TopKIndicesNode;
    Min: MinNode;
    Minimum: MinimumNode;
    Max: MaxNode;
    Maximum: MaximumNode;
    Ceil: UnaryNode<R>;
    Floor: UnaryNode<R>;
    Pow: PowNode<R>;
    Exp: UnaryNode<R>;
    Log: UnaryNode<R>;
    Sqrt: UnaryNode<R>;
    Square: UnaryNode<R>;
    Relu: UnaryNode<R>;
    LeakyRelu: LeakyReluNode<R>;
    PReLU: PReLUNode<R>;
    PReLUDer: PReLUNode<R>;
    Reshape: ReshapeNode;
    Cast: CastNode;
    Elu: UnaryNode<R>;
    EluDer: UnaryNode<R>;
    Selu: UnaryNode<R>;
    Abs: UnaryNode<R>;
    Sigmoid: UnaryNode<R>;
    Step: StepNode<R>;
    Sin: UnaryNode<R>;
    Cos: UnaryNode<R>;
    Tan: UnaryNode<R>;
    Asin: UnaryNode<R>;
    Acos: UnaryNode<R>;
    Atan: UnaryNode<R>;
    Sinh: UnaryNode<R>;
    Cosh: UnaryNode<R>;
    Tanh: UnaryNode<R>;
    Clip: ClipNode<R>;
    Transpose: TransposeNode<R>;
    Pad1D: Pad1DNode;
    Pad2D: Pad2DNode;
    Tile: TileNode<R>;
    Gather: GatherNode<R>;
    Conv2D: Conv2DNode;
    Conv2DDerInput: Conv2DDerInputNode;
    Conv2DDerFilter: Conv2DDerFilterNode;
    Conv2DDerBias: Conv2DDerBiasNode;
    DepthwiseConv2D: Conv2DNode;
    MaxPool: PoolNode;
    MaxPoolBackprop: PoolBackpropNode;
    AvgPool: PoolNode;
    AvgPoolBackprop: PoolBackpropNode;
    MinPool: PoolNode;
    ResizeBilinear: ResizeBilinearNode;
    BatchNorm4D: BatchNorm4DNode;
    BatchNorm3D: BatchNorm3DNode;
    BatchNorm2D: BatchNorm2DNode;
    LRN4D: LRN4DNode;
    Multinomial: MultinomialNode;
    OneHot: OneHotNode;
}
